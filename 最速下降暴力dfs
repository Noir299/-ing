931. 下降路径最小和
给你一个 n x n 的 方形 整数数组 matrix ，请你找出并返回通过 matrix 的下降路径 的 最小和 。

下降路径 可以从第一行中的任何元素开始，并从每一行中选择一个元素。在下一行选择的元素和当前行所选元素最多相隔一列（即位于正下方或者沿对角线向左或者向右的第一个元素）。具体来说，位置 (row, col) 的下一个元素应当是 (row + 1, col - 1)、(row + 1, col) 或者 (row + 1, col + 1) 。
输入：matrix = [[2,1,3],[6,5,4],[7,8,9]]
输出：13
解释：如图所示，为和最小的两条下降路径

int minFallingPathSum(int** matrix, int matrixSize, int* matrixColSize){
    int min=10000;
    for(int k=0;k<matrixSize;k++){
        min=Min(min,dfs(matrix,0,k,matrixSize));
    }
    return min;
    
}

int dfs(int** matrix,int i,int j,int n){
    if(i==n-1)
            return matrix[i][j];
    if(j==0)
            return Min(dfs(matrix,i+1,j,n),dfs(matrix,i+1,j+1,n))+matrix[i][j];
    if(j==n-1)
            return Min(dfs(matrix,i+1,j,n),dfs(matrix,i+1,j-1,n))+matrix[i][j];
    return minthird(dfs(matrix,i+1,j,n),dfs(matrix,i+1,j+1,n),dfs(matrix,i+1,j-1,n))+matrix[i][j];
}

int minthird(int a,int b,int c){
    if(a<=b&&a<=c)return a;
    else if(b<=a&&b<=c)return b;
    else return c;
}
int Min(int a,int b){
    if(a<b)return a;
    return b;
}

可以优化重复路径，在dfs函数中创建一个新二维数组来记录路径是否重复，返回已经计算过的路径值
